@model WebMVC.ViewModels.Account.LoginViewModel


@{
  ViewData["Title"] = "Log in";
}

<h2>Log in</h2>
<h3>Note that for demo purposes you don't need to register and can login with these credentials:</h3>
<p>User:     <b>admin@reminders-on-containers.com</b>
</p>
<p>Password: <b>Pa$$w0rd</b></p>

<div class="container account-login-container">
  <div class="row">
    <div class="col-md-12">
      <section>
        <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
          <input type="hidden" asp-for="ReturnUrl" />
          <div asp-validation-summary="All" class="text-danger"></div>
          <div class="form-group">
            <label asp-for="Email" class="control-label form-label"></label>
            <input asp-for="Email" class="form-control form-input form-input-center" />
            <span asp-validation-for="Email" class="text-danger"></span>
          </div>
          <div class="form-group">
            <label asp-for="Password" class="control-label form-label"></label>
            <input asp-for="Password" class="form-control form-input form-input-center" />
            <span asp-validation-for="Password" class="text-danger"></span>
          </div>
          <div class="form-group">
            <div class="checkbox">
              <label asp-for="RememberMe">
                <input asp-for="RememberMe" />
                @Html.DisplayNameFor(m => m.RememberMe)
              </label>
            </div>
          </div>
          <div class="form-group">
            <button type="submit" class="btn btn-default btn-brand btn-brand-big">&nbsp;LOG IN&nbsp;</button>
          </div>
         
        </form>
      </section>
    </div>
  </div>
</div>

@section Scripts {
  @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
